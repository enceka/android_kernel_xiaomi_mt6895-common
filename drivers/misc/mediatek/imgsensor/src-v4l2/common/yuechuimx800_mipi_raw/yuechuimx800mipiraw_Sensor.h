/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Copyright (c) 2019 MediaTek Inc.
 */

/*****************************************************************************
 *
 * Filename:
 * ---------
 *     YUECHUIMX800mipi_Sensor.h
 *
 * Project:
 * --------
 *     ALPS
 *
 * Description:
 * ------------
 *     CMOS sensor header file
 *
 ****************************************************************************/
#ifndef _YUECHUIMX800MIPI_SENSOR_H
#define _YUECHUIMX800MIPI_SENSOR_H

static kal_uint16 yuechuimx800_init_setting[] = {
	0x0136, 0x18,
	0x0137, 0x00,
	0x3304, 0x00,
	0x33F0, 0x04,
	0x33F1, 0x06,
	0x0111, 0x03,
	0x0808, 0x02,
	0x39D1, 0x00,
	0x7BBA, 0x01,
	0x7D6E, 0x01,
	0x9230, 0xBD,
	0x9231, 0x07,
	0x9232, 0xBD,
	0x9233, 0x01,
	0x9234, 0xBD,
	0x9235, 0x02,
};

static kal_uint16 yuechuimx800_preview_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x02,
	0x321C, 0x00,
	0x0342, 0x26,
	0x0343, 0x30,
	0x0340, 0x19,
	0x0341, 0xB8,
	0x0344, 0x01,
	0x0345, 0x20,
	0x0346, 0x00,
	0x0347, 0x00,
	0x0348, 0x21,
	0x0349, 0x1F,
	0x034A, 0x17,
	0x034B, 0xFF,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3005, 0x02,
	0x31A8, 0x04,
	0x31A9, 0x01,
	0x31D0, 0x41,
	0x31D1, 0x41,
	0x320B, 0x01,
	0x350D, 0x00,
	0x0408, 0x00,
	0x0409, 0x00,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x10,
	0x040D, 0x00,
	0x040E, 0x0C,
	0x040F, 0x00,
	0x034C, 0x10,
	0x034D, 0x00,
	0x034E, 0x0C,
	0x034F, 0x00,
	0x0301, 0x08,
	0x0303, 0x02,
	0x0305, 0x02,
	0x0306, 0x00,
	0x0307, 0xA1,
	0x030B, 0x02,
	0x030D, 0x0C,
	0x030E, 0x09,
	0x030F, 0xC4,
	0x3205, 0x00,
	0x3206, 0x00,
	0x3213, 0x01,
	0x3818, 0x3C,
	0x3819, 0x03,
	0x381A, 0xA9,
	0x381B, 0x01,
	0x381C, 0x02,
	0x381D, 0x04,
	0x381E, 0x01,
	0x381F, 0x01,
	0x3890, 0x00,
	0x3891, 0x00,
	0x3894, 0x00,
	0x3895, 0x00,
	0x3896, 0x00,
	0x3897, 0x00,
	0x389A, 0x00,
	0x389B, 0x00,
	0x389C, 0x01,
	0x389D, 0xE5,
	0x389E, 0x00,
	0x389F, 0x00,
	0x38A0, 0x00,
	0x38A1, 0xEC,
	0x38A2, 0x00,
	0x38A3, 0x0A,
	0x38A4, 0x00,
	0x38A5, 0x00,
	0x38A6, 0x00,
	0x38A7, 0x00,
	0x38B8, 0x01,
	0x38B9, 0x5A,
	0x38BA, 0x00,
	0x38BB, 0x00,
	0x38D0, 0x00,
	0x38D1, 0x00,
	0x38D2, 0x00,
	0x38D3, 0x00,
	0x38D6, 0x00,
	0x38D7, 0x00,
	0x38D8, 0x00,
	0x38D9, 0x00,
	0x38DA, 0x00,
	0x38DB, 0x00,
	0x38DC, 0x00,
	0x38DD, 0x00,
	0x38E8, 0x00,
	0x38E9, 0x00,
	0x0202, 0x19,
	0x0203, 0x88,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3162, 0x01,
	0x3163, 0xF4,
	0x3168, 0x01,
	0x3169, 0xF4,
	0x0204, 0x13,
	0x0205, 0x34,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0216, 0x13,
	0x0217, 0x34,
	0x0218, 0x01,
	0x0219, 0x00,
	0x3164, 0x13,
	0x3165, 0x34,
	0x3166, 0x01,
	0x3167, 0x00,
	0x316A, 0x13,
	0x316B, 0x34,
	0x316C, 0x01,
	0x316D, 0x00,
	0x3104, 0x01,
	0x3086, 0x01,
	0x3088, 0x00,
	0x30A8, 0x01,
	0x30AA, 0x01,
	0x30C0, 0x02,
	0x30C2, 0x02,
	0x30D8, 0x03,
	0x30DA, 0x03,
	0x3087, 0x2B,
	0x3089, 0x30,
	0x30A9, 0x30,
	0x30AB, 0x30,
	0x30C1, 0x30,
	0x30C3, 0x30,
	0x30D9, 0x30,
	0x30DB, 0x30,
	0x3170, 0x00,
	0x3171, 0x00,
	0x317E, 0x0A,
	0x317F, 0x0A,
	0x3180, 0x0A,
	0x3181, 0x0A,
	0x3182, 0x0A,
	0x3183, 0x0A,
	0x39D0, 0x00,
	0x084E, 0x00,
	0x084F, 0x17,
	0x0850, 0x00,
	0x0851, 0x13,
	0x0852, 0x00,
	0x0853, 0x27,
	0x0854, 0x00,
	0x0855, 0x29,
	0x0858, 0x00,
	0x0859, 0x1D,
};

//same as preview
static kal_uint16 yuechuimx800_capture_setting[] = {
};

static kal_uint16 yuechuimx800_normal_video_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x02,
	0x321C, 0x00,
	0x0342, 0x26,
	0x0343, 0x30,
	0x0340, 0x1D,
	0x0341, 0x14,
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x03,
	0x0347, 0x00,
	0x0348, 0x22,
	0x0349, 0x3F,
	0x034A, 0x14,
	0x034B, 0xFF,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3005, 0x02,
	0x31A8, 0x04,
	0x31A9, 0x01,
	0x31D0, 0x41,
	0x31D1, 0x41,
	0x320B, 0x01,
	0x350D, 0x00,
	0x0408, 0x00,
	0x0409, 0x90,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x10,
	0x040D, 0x00,
	0x040E, 0x09,
	0x040F, 0x00,
	0x034C, 0x10,
	0x034D, 0x00,
	0x034E, 0x09,
	0x034F, 0x00,
	0x0301, 0x08,
	0x0303, 0x02,
	0x0305, 0x02,
	0x0306, 0x00,
	0x0307, 0xB6,
	0x030B, 0x02,
	0x030D, 0x0C,
	0x030E, 0x09,
	0x030F, 0xC4,
	0x3205, 0x00,
	0x3206, 0x00,
	0x3213, 0x01,
	0x3818, 0x3C,
	0x3819, 0x03,
	0x381A, 0xA9,
	0x381B, 0x01,
	0x381C, 0x02,
	0x381D, 0x04,
	0x381E, 0x01,
	0x381F, 0x01,
	0x3890, 0x00,
	0x3891, 0x00,
	0x3894, 0x00,
	0x3895, 0x00,
	0x3896, 0x00,
	0x3897, 0x00,
	0x389A, 0x00,
	0x389B, 0x00,
	0x389C, 0x00,
	0x389D, 0x00,
	0x389E, 0x00,
	0x389F, 0x00,
	0x38A0, 0x00,
	0x38A1, 0x00,
	0x38A2, 0x00,
	0x38A3, 0x00,
	0x38A4, 0x00,
	0x38A5, 0x00,
	0x38A6, 0x00,
	0x38A7, 0x00,
	0x38B8, 0x00,
	0x38B9, 0x00,
	0x38BA, 0x00,
	0x38BB, 0x00,
	0x38D0, 0x00,
	0x38D1, 0x00,
	0x38D2, 0x00,
	0x38D3, 0x00,
	0x38D6, 0x00,
	0x38D7, 0x00,
	0x38D8, 0x00,
	0x38D9, 0x00,
	0x38DA, 0x00,
	0x38DB, 0x00,
	0x38DC, 0x00,
	0x38DD, 0x00,
	0x38E8, 0x00,
	0x38E9, 0x00,
	0x0202, 0x1C,
	0x0203, 0xE4,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3162, 0x01,
	0x3163, 0xF4,
	0x3168, 0x01,
	0x3169, 0xF4,
	0x0204, 0x13,
	0x0205, 0x34,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0216, 0x13,
	0x0217, 0x34,
	0x0218, 0x01,
	0x0219, 0x00,
	0x3164, 0x13,
	0x3165, 0x34,
	0x3166, 0x01,
	0x3167, 0x00,
	0x316A, 0x13,
	0x316B, 0x34,
	0x316C, 0x01,
	0x316D, 0x00,
	0x3104, 0x01,
	0x3086, 0x02,
	0x3088, 0x00,
	0x30A8, 0x01,
	0x30AA, 0x01,
	0x30C0, 0x02,
	0x30C2, 0x02,
	0x30D8, 0x03,
	0x30DA, 0x03,
	0x3087, 0x2B,
	0x3089, 0x30,
	0x30A9, 0x30,
	0x30AB, 0x30,
	0x30C1, 0x30,
	0x30C3, 0x30,
	0x30D9, 0x30,
	0x30DB, 0x30,
	0x3170, 0x00,
	0x3171, 0x00,
	0x317E, 0x0A,
	0x317F, 0x0A,
	0x3180, 0x0A,
	0x3181, 0x0A,
	0x3182, 0x0A,
	0x3183, 0x0A,
	0x39D0, 0x00,
	0x084E, 0x00,
	0x084F, 0x17,
	0x0850, 0x00,
	0x0851, 0x13,
	0x0852, 0x00,
	0x0853, 0x27,
	0x0854, 0x00,
	0x0855, 0x29,
	0x0858, 0x00,
	0x0859, 0x1D,
};

static kal_uint16 yuechuimx800_hs_video_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x02,
	0x321C, 0x00,
	0x0342, 0x15,
	0x0343, 0x90,
	0x0340, 0x04,
	0x0341, 0xD8,
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x03,
	0x0347, 0x00,
	0x0348, 0x22,
	0x0349, 0x3F,
	0x034A, 0x14,
	0x034B, 0xFF,
	0x0900, 0x01,
	0x0901, 0x44,
	0x0902, 0x08,
	0x3005, 0x02,
	0x31A8, 0x04,
	0x31A9, 0x00,
	0x31D0, 0x43,
	0x31D1, 0x43,
	0x320B, 0x01,
	0x350D, 0x00,
	0x0408, 0x00,
	0x0409, 0x48,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x08,
	0x040D, 0x00,
	0x040E, 0x04,
	0x040F, 0x80,
	0x034C, 0x08,
	0x034D, 0x00,
	0x034E, 0x04,
	0x034F, 0x80,
	0x0301, 0x08,
	0x0303, 0x02,
	0x0305, 0x02,
	0x0306, 0x00,
	0x0307, 0x89,
	0x030B, 0x02,
	0x030D, 0x0C,
	0x030E, 0x09,
	0x030F, 0xC4,
	0x3205, 0x00,
	0x3206, 0x00,
	0x3213, 0x01,
	0x3818, 0x3C,
	0x3819, 0x03,
	0x381A, 0xA9,
	0x381B, 0x01,
	0x381C, 0x02,
	0x381D, 0x04,
	0x381E, 0x01,
	0x381F, 0x01,
	0x3890, 0x00,
	0x3891, 0x00,
	0x3894, 0x00,
	0x3895, 0x00,
	0x3896, 0x00,
	0x3897, 0x00,
	0x389A, 0x00,
	0x389B, 0x00,
	0x389C, 0x00,
	0x389D, 0x00,
	0x389E, 0x00,
	0x389F, 0x00,
	0x38A0, 0x00,
	0x38A1, 0x00,
	0x38A2, 0x00,
	0x38A3, 0x00,
	0x38A4, 0x00,
	0x38A5, 0x00,
	0x38A6, 0x00,
	0x38A7, 0x00,
	0x38B8, 0x00,
	0x38B9, 0x96,
	0x38BA, 0x00,
	0x38BB, 0x96,
	0x38D0, 0x00,
	0x38D1, 0x00,
	0x38D2, 0x00,
	0x38D3, 0x00,
	0x38D6, 0x00,
	0x38D7, 0x00,
	0x38D8, 0x00,
	0x38D9, 0x00,
	0x38DA, 0x00,
	0x38DB, 0x00,
	0x38DC, 0x00,
	0x38DD, 0x00,
	0x38E8, 0x00,
	0x38E9, 0x00,
	0x0202, 0x04,
	0x0203, 0xA8,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3162, 0x01,
	0x3163, 0xF4,
	0x3168, 0x01,
	0x3169, 0xF4,
	0x0204, 0x13,
	0x0205, 0x34,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0216, 0x13,
	0x0217, 0x34,
	0x0218, 0x01,
	0x0219, 0x00,
	0x3164, 0x13,
	0x3165, 0x34,
	0x3166, 0x01,
	0x3167, 0x00,
	0x316A, 0x13,
	0x316B, 0x34,
	0x316C, 0x01,
	0x316D, 0x00,
	0x3104, 0x01,
	0x3086, 0x01,
	0x3088, 0x00,
	0x30A8, 0x01,
	0x30AA, 0x01,
	0x30C0, 0x02,
	0x30C2, 0x02,
	0x30D8, 0x03,
	0x30DA, 0x03,
	0x3087, 0x2B,
	0x3089, 0x30,
	0x30A9, 0x30,
	0x30AB, 0x30,
	0x30C1, 0x30,
	0x30C3, 0x30,
	0x30D9, 0x30,
	0x30DB, 0x30,
	0x3170, 0x00,
	0x3171, 0x00,
	0x317E, 0x0A,
	0x317F, 0x0A,
	0x3180, 0x0A,
	0x3181, 0x0A,
	0x3182, 0x0A,
	0x3183, 0x0A,
	0x39D0, 0x00,
	0x084E, 0x00,
	0x084F, 0x17,
	0x0850, 0x00,
	0x0851, 0x13,
	0x0852, 0x00,
	0x0853, 0x27,
	0x0854, 0x00,
	0x0855, 0x29,
	0x0858, 0x00,
	0x0859, 0x1D,
};

//same as preview
static kal_uint16 yuechuimx800_slim_video_setting[] = {
};

//same as preview
static kal_uint16 yuechuimx800_custom1_setting[] = {
};

static kal_uint16 yuechuimx800_custom2_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x02,
	0x321C, 0x00,
	0x0342, 0x15,
	0x0343, 0x90,
	0x0340, 0x08,
	0x0341, 0x7C,
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x03,
	0x0347, 0x00,
	0x0348, 0x22,
	0x0349, 0x3F,
	0x034A, 0x14,
	0x034B, 0xFF,
	0x0900, 0x01,
	0x0901, 0x44,
	0x0902, 0x08,
	0x3005, 0x02,
	0x31A8, 0x04,
	0x31A9, 0x00,
	0x31D0, 0x43,
	0x31D1, 0x43,
	0x320B, 0x01,
	0x350D, 0x00,
	0x0408, 0x00,
	0x0409, 0x48,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x08,
	0x040D, 0x00,
	0x040E, 0x04,
	0x040F, 0x80,
	0x034C, 0x08,
	0x034D, 0x00,
	0x034E, 0x04,
	0x034F, 0x80,
	0x0301, 0x08,
	0x0303, 0x02,
	0x0305, 0x02,
	0x0306, 0x00,
	0x0307, 0x78,
	0x030B, 0x02,
	0x030D, 0x0C,
	0x030E, 0x09,
	0x030F, 0xC4,
	0x3205, 0x00,
	0x3206, 0x00,
	0x3213, 0x01,
	0x3818, 0x3C,
	0x3819, 0x03,
	0x381A, 0xA9,
	0x381B, 0x01,
	0x381C, 0x02,
	0x381D, 0x04,
	0x381E, 0x01,
	0x381F, 0x01,
	0x3890, 0x00,
	0x3891, 0x00,
	0x3894, 0x00,
	0x3895, 0x00,
	0x3896, 0x00,
	0x3897, 0x00,
	0x389A, 0x00,
	0x389B, 0x00,
	0x389C, 0x00,
	0x389D, 0x00,
	0x389E, 0x00,
	0x389F, 0x00,
	0x38A0, 0x00,
	0x38A1, 0x00,
	0x38A2, 0x00,
	0x38A3, 0x00,
	0x38A4, 0x00,
	0x38A5, 0x00,
	0x38A6, 0x00,
	0x38A7, 0x00,
	0x38B8, 0x00,
	0x38B9, 0x96,
	0x38BA, 0x00,
	0x38BB, 0x96,
	0x38D0, 0x00,
	0x38D1, 0x00,
	0x38D2, 0x00,
	0x38D3, 0x00,
	0x38D6, 0x00,
	0x38D7, 0x00,
	0x38D8, 0x00,
	0x38D9, 0x00,
	0x38DA, 0x00,
	0x38DB, 0x00,
	0x38DC, 0x00,
	0x38DD, 0x00,
	0x38E8, 0x00,
	0x38E9, 0x00,
	0x0202, 0x08,
	0x0203, 0x4C,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3162, 0x01,
	0x3163, 0xF4,
	0x3168, 0x01,
	0x3169, 0xF4,
	0x0204, 0x13,
	0x0205, 0x34,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0216, 0x13,
	0x0217, 0x34,
	0x0218, 0x01,
	0x0219, 0x00,
	0x3164, 0x13,
	0x3165, 0x34,
	0x3166, 0x01,
	0x3167, 0x00,
	0x316A, 0x13,
	0x316B, 0x34,
	0x316C, 0x01,
	0x316D, 0x00,
	0x3104, 0x01,
	0x3086, 0x01,
	0x3088, 0x00,
	0x30A8, 0x01,
	0x30AA, 0x01,
	0x30C0, 0x02,
	0x30C2, 0x02,
	0x30D8, 0x03,
	0x30DA, 0x03,
	0x3087, 0x2B,
	0x3089, 0x30,
	0x30A9, 0x30,
	0x30AB, 0x30,
	0x30C1, 0x30,
	0x30C3, 0x30,
	0x30D9, 0x30,
	0x30DB, 0x30,
	0x3170, 0x00,
	0x3171, 0x00,
	0x317E, 0x0A,
	0x317F, 0x0A,
	0x3180, 0x0A,
	0x3181, 0x0A,
	0x3182, 0x0A,
	0x3183, 0x0A,
	0x39D0, 0x00,
	0x084E, 0x00,
	0x084F, 0x17,
	0x0850, 0x00,
	0x0851, 0x13,
	0x0852, 0x00,
	0x0853, 0x27,
	0x0854, 0x00,
	0x0855, 0x29,
	0x0858, 0x00,
	0x0859, 0x1D,
};

static kal_uint16 yuechuimx800_custom3_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x02,
	0x321C, 0x00,
	0x0342, 0x26,
	0x0343, 0x30,
	0x0340, 0x0E,
	0x0341, 0x88,
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x03,
	0x0347, 0x00,
	0x0348, 0x22,
	0x0349, 0x3F,
	0x034A, 0x14,
	0x034B, 0xFF,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3005, 0x02,
	0x31A8, 0x04,
	0x31A9, 0x01,
	0x31D0, 0x41,
	0x31D1, 0x41,
	0x320B, 0x01,
	0x350D, 0x00,
	0x0408, 0x00,
	0x0409, 0x90,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x10,
	0x040D, 0x00,
	0x040E, 0x09,
	0x040F, 0x00,
	0x034C, 0x10,
	0x034D, 0x00,
	0x034E, 0x09,
	0x034F, 0x00,
	0x0301, 0x08,
	0x0303, 0x02,
	0x0305, 0x02,
	0x0306, 0x00,
	0x0307, 0xB6,
	0x030B, 0x02,
	0x030D, 0x0C,
	0x030E, 0x09,
	0x030F, 0xC4,
	0x3205, 0x00,
	0x3206, 0x00,
	0x3213, 0x01,
	0x3818, 0x3C,
	0x3819, 0x03,
	0x381A, 0xA9,
	0x381B, 0x01,
	0x381C, 0x02,
	0x381D, 0x04,
	0x381E, 0x01,
	0x381F, 0x01,
	0x3890, 0x00,
	0x3891, 0x00,
	0x3894, 0x00,
	0x3895, 0x00,
	0x3896, 0x00,
	0x3897, 0x00,
	0x389A, 0x00,
	0x389B, 0x00,
	0x389C, 0x00,
	0x389D, 0x00,
	0x389E, 0x00,
	0x389F, 0x00,
	0x38A0, 0x00,
	0x38A1, 0x00,
	0x38A2, 0x00,
	0x38A3, 0x00,
	0x38A4, 0x00,
	0x38A5, 0x00,
	0x38A6, 0x00,
	0x38A7, 0x00,
	0x38B8, 0x00,
	0x38B9, 0x00,
	0x38BA, 0x00,
	0x38BB, 0x00,
	0x38D0, 0x00,
	0x38D1, 0x00,
	0x38D2, 0x00,
	0x38D3, 0x00,
	0x38D6, 0x00,
	0x38D7, 0x00,
	0x38D8, 0x00,
	0x38D9, 0x00,
	0x38DA, 0x00,
	0x38DB, 0x00,
	0x38DC, 0x00,
	0x38DD, 0x00,
	0x38E8, 0x00,
	0x38E9, 0x00,
	0x0202, 0x0E,
	0x0203, 0x58,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3162, 0x01,
	0x3163, 0xF4,
	0x3168, 0x01,
	0x3169, 0xF4,
	0x0204, 0x13,
	0x0205, 0x34,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0216, 0x13,
	0x0217, 0x34,
	0x0218, 0x01,
	0x0219, 0x00,
	0x3164, 0x13,
	0x3165, 0x34,
	0x3166, 0x01,
	0x3167, 0x00,
	0x316A, 0x13,
	0x316B, 0x34,
	0x316C, 0x01,
	0x316D, 0x00,
	0x3104, 0x01,
	0x3086, 0x01,
	0x3088, 0x00,
	0x30A8, 0x01,
	0x30AA, 0x01,
	0x30C0, 0x02,
	0x30C2, 0x02,
	0x30D8, 0x03,
	0x30DA, 0x03,
	0x3087, 0x2B,
	0x3089, 0x30,
	0x30A9, 0x30,
	0x30AB, 0x30,
	0x30C1, 0x30,
	0x30C3, 0x30,
	0x30D9, 0x30,
	0x30DB, 0x30,
	0x3170, 0x00,
	0x3171, 0x00,
	0x317E, 0x0A,
	0x317F, 0x0A,
	0x3180, 0x0A,
	0x3181, 0x0A,
	0x3182, 0x0A,
	0x3183, 0x0A,
	0x39D0, 0x00,
	0x084E, 0x00,
	0x084F, 0x17,
	0x0850, 0x00,
	0x0851, 0x13,
	0x0852, 0x00,
	0x0853, 0x27,
	0x0854, 0x00,
	0x0855, 0x29,
	0x0858, 0x00,
	0x0859, 0x1D,
};

static kal_uint16 yuechuimx800_custom4_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x02,
	0x321C, 0x00,
	0x0342, 0x5A,
	0x0343, 0x20,
	0x0340, 0x18,
	0x0341, 0x68,
	0x0344, 0x01,
	0x0345, 0x20,
	0x0346, 0x00,
	0x0347, 0x00,
	0x0348, 0x21,
	0x0349, 0x1F,
	0x034A, 0x17,
	0x034B, 0xFF,
	0x0900, 0x00,
	0x0901, 0x11,
	0x0902, 0x0A,
	0x3005, 0x00,
	0x31A8, 0x00,
	0x31A9, 0x01,
	0x31D0, 0x00,
	0x31D1, 0x00,
	0x320B, 0x01,
	0x350D, 0x00,
	0x0408, 0x00,
	0x0409, 0x00,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x20,
	0x040D, 0x00,
	0x040E, 0x18,
	0x040F, 0x00,
	0x034C, 0x20,
	0x034D, 0x00,
	0x034E, 0x18,
	0x034F, 0x00,
	0x0301, 0x08,
	0x0303, 0x02,
	0x0305, 0x02,
	0x0306, 0x00,
	0x0307, 0xA1,
	0x030B, 0x02,
	0x030D, 0x0C,
	0x030E, 0x09,
	0x030F, 0xC4,
	0x3205, 0x01,
	0x3206, 0x01,
	0x3213, 0x01,
	0x3818, 0x68,
	0x3819, 0x03,
	0x381A, 0xA9,
	0x381B, 0x00,
	0x381C, 0x04,
	0x381D, 0x00,
	0x381E, 0x00,
	0x381F, 0x00,
	0x3890, 0x00,
	0x3891, 0x00,
	0x3894, 0x00,
	0x3895, 0x00,
	0x3896, 0x00,
	0x3897, 0x00,
	0x389A, 0x00,
	0x389B, 0x00,
	0x389C, 0x00,
	0x389D, 0x00,
	0x389E, 0x00,
	0x389F, 0x00,
	0x38A0, 0x00,
	0x38A1, 0x00,
	0x38A2, 0x00,
	0x38A3, 0x00,
	0x38A4, 0x00,
	0x38A5, 0x00,
	0x38A6, 0x00,
	0x38A7, 0x00,
	0x38B8, 0x01,
	0x38B9, 0x5E,
	0x38BA, 0x01,
	0x38BB, 0x5E,
	0x38D0, 0x00,
	0x38D1, 0x00,
	0x38D2, 0x00,
	0x38D3, 0x00,
	0x38D6, 0x00,
	0x38D7, 0x00,
	0x38D8, 0x00,
	0x38D9, 0x00,
	0x38DA, 0x00,
	0x38DB, 0x00,
	0x38DC, 0x00,
	0x38DD, 0x00,
	0x38E8, 0x00,
	0x38E9, 0x00,
	0x0202, 0x18,
	0x0203, 0x38,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3162, 0x01,
	0x3163, 0xF4,
	0x3168, 0x01,
	0x3169, 0xF4,
	0x0204, 0x00,
	0x0205, 0x00,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0216, 0x00,
	0x0217, 0x00,
	0x0218, 0x01,
	0x0219, 0x00,
	0x3164, 0x00,
	0x3165, 0x00,
	0x3166, 0x01,
	0x3167, 0x00,
	0x316A, 0x00,
	0x316B, 0x00,
	0x316C, 0x01,
	0x316D, 0x00,
	0x3104, 0x01,
	0x3086, 0x01,
	0x3088, 0x01,
	0x30A8, 0x01,
	0x30AA, 0x01,
	0x30C0, 0x02,
	0x30C2, 0x02,
	0x30D8, 0x03,
	0x30DA, 0x03,
	0x3087, 0x2B,
	0x3089, 0x2B,
	0x30A9, 0x30,
	0x30AB, 0x30,
	0x30C1, 0x30,
	0x30C3, 0x30,
	0x30D9, 0x30,
	0x30DB, 0x30,
	0x3170, 0x00,
	0x3171, 0x00,
	0x317E, 0x0A,
	0x317F, 0x0A,
	0x3180, 0x0A,
	0x3181, 0x0A,
	0x3182, 0x0A,
	0x3183, 0x0A,
	0x39D0, 0x00,
	0x084E, 0x00,
	0x084F, 0x17,
	0x0850, 0x00,
	0x0851, 0x13,
	0x0852, 0x00,
	0x0853, 0x27,
	0x0854, 0x00,
	0x0855, 0x29,
	0x0858, 0x00,
	0x0859, 0x1D,
};

static kal_uint16 yuechuimx800_custom5_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x02,
	0x321C, 0x00,
	0x0342, 0x2D,
	0x0343, 0x10,
	0x0340, 0x15,
	0x0341, 0xCC,
	0x0344, 0x01,
	0x0345, 0x20,
	0x0346, 0x06,
	0x0347, 0x00,
	0x0348, 0x21,
	0x0349, 0x1F,
	0x034A, 0x11,
	0x034B, 0xFF,
	0x0900, 0x00,
	0x0901, 0x11,
	0x0902, 0x0A,
	0x3005, 0x00,
	0x31A8, 0x00,
	0x31A9, 0x01,
	0x31D0, 0x00,
	0x31D1, 0x00,
	0x320B, 0x01,
	0x350D, 0x00,
	0x0408, 0x08,
	0x0409, 0x00,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x10,
	0x040D, 0x00,
	0x040E, 0x0C,
	0x040F, 0x00,
	0x034C, 0x10,
	0x034D, 0x00,
	0x034E, 0x0C,
	0x034F, 0x00,
	0x0301, 0x08,
	0x0303, 0x02,
	0x0305, 0x02,
	0x0306, 0x00,
	0x0307, 0xA1,
	0x030B, 0x02,
	0x030D, 0x0C,
	0x030E, 0x09,
	0x030F, 0xC4,
	0x3205, 0x01,
	0x3206, 0x01,
	0x3213, 0x01,
	0x3818, 0x68,
	0x3819, 0x03,
	0x381A, 0xA9,
	0x381B, 0x00,
	0x381C, 0x04,
	0x381D, 0x00,
	0x381E, 0x00,
	0x381F, 0x00,
	0x3890, 0x00,
	0x3891, 0x00,
	0x3894, 0x00,
	0x3895, 0x00,
	0x3896, 0x00,
	0x3897, 0x00,
	0x389A, 0x00,
	0x389B, 0x00,
	0x389C, 0x00,
	0x389D, 0x00,
	0x389E, 0x00,
	0x389F, 0x00,
	0x38A0, 0x00,
	0x38A1, 0x00,
	0x38A2, 0x00,
	0x38A3, 0x00,
	0x38A4, 0x00,
	0x38A5, 0x00,
	0x38A6, 0x00,
	0x38A7, 0x00,
	0x38B8, 0x01,
	0x38B9, 0x5E,
	0x38BA, 0x01,
	0x38BB, 0x5E,
	0x38D0, 0x00,
	0x38D1, 0x00,
	0x38D2, 0x00,
	0x38D3, 0x00,
	0x38D6, 0x00,
	0x38D7, 0x00,
	0x38D8, 0x00,
	0x38D9, 0x00,
	0x38DA, 0x00,
	0x38DB, 0x00,
	0x38DC, 0x00,
	0x38DD, 0x00,
	0x38E8, 0x00,
	0x38E9, 0x00,
	0x0202, 0x15,
	0x0203, 0x9C,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3162, 0x01,
	0x3163, 0xF4,
	0x3168, 0x01,
	0x3169, 0xF4,
	0x0204, 0x00,
	0x0205, 0x00,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0216, 0x00,
	0x0217, 0x00,
	0x0218, 0x01,
	0x0219, 0x00,
	0x3164, 0x00,
	0x3165, 0x00,
	0x3166, 0x01,
	0x3167, 0x00,
	0x316A, 0x00,
	0x316B, 0x00,
	0x316C, 0x01,
	0x316D, 0x00,
	0x3104, 0x01,
	0x3086, 0x01,
	0x3088, 0x01,
	0x30A8, 0x01,
	0x30AA, 0x01,
	0x30C0, 0x02,
	0x30C2, 0x02,
	0x30D8, 0x03,
	0x30DA, 0x03,
	0x3087, 0x2B,
	0x3089, 0x2B,
	0x30A9, 0x30,
	0x30AB, 0x30,
	0x30C1, 0x30,
	0x30C3, 0x30,
	0x30D9, 0x30,
	0x30DB, 0x30,
	0x3170, 0x00,
	0x3171, 0x00,
	0x317E, 0x0A,
	0x317F, 0x0A,
	0x3180, 0x0A,
	0x3181, 0x0A,
	0x3182, 0x0A,
	0x3183, 0x0A,
	0x39D0, 0x00,
	0x084E, 0x00,
	0x084F, 0x17,
	0x0850, 0x00,
	0x0851, 0x13,
	0x0852, 0x00,
	0x0853, 0x27,
	0x0854, 0x00,
	0x0855, 0x29,
	0x0858, 0x00,
	0x0859, 0x1D,
};

//same as preview
static kal_uint16 yuechuimx800_custom6_setting[] = {
};

static kal_uint16 yuechuimx800_custom7_setting[] = {
};

static kal_uint16 yuechuimx800_custom8_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x02,
	0x321C, 0x00,
	0x0342, 0x26,
	0x0343, 0x30,
	0x0340, 0x1D,
	0x0341, 0x3C,
	0x0344, 0x01,
	0x0345, 0x20,
	0x0346, 0x06,
	0x0347, 0x00,
	0x0348, 0x21,
	0x0349, 0x1F,
	0x034A, 0x11,
	0x034B, 0xFF,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3005, 0x02,
	0x31A8, 0x04,
	0x31A9, 0x01,
	0x31D0, 0x41,
	0x31D1, 0x41,
	0x320B, 0x01,
	0x350D, 0x00,
	0x0408, 0x04,
	0x0409, 0x00,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x08,
	0x040D, 0x00,
	0x040E, 0x06,
	0x040F, 0x00,
	0x034C, 0x08,
	0x034D, 0x00,
	0x034E, 0x06,
	0x034F, 0x00,
	0x0301, 0x08,
	0x0303, 0x02,
	0x0305, 0x02,
	0x0306, 0x00,
	0x0307, 0xB7,
	0x030B, 0x02,
	0x030D, 0x0C,
	0x030E, 0x09,
	0x030F, 0xC4,
	0x3205, 0x00,
	0x3206, 0x00,
	0x3213, 0x01,
	0x3818, 0x3C,
	0x3819, 0x03,
	0x381A, 0xA9,
	0x381B, 0x01,
	0x381C, 0x02,
	0x381D, 0x04,
	0x381E, 0x01,
	0x381F, 0x01,
	0x3890, 0x00,
	0x3891, 0x00,
	0x3894, 0x00,
	0x3895, 0x00,
	0x3896, 0x00,
	0x3897, 0x00,
	0x389A, 0x00,
	0x389B, 0x00,
	0x389C, 0x00,
	0x389D, 0x00,
	0x389E, 0x00,
	0x389F, 0x00,
	0x38A0, 0x00,
	0x38A1, 0x00,
	0x38A2, 0x00,
	0x38A3, 0x00,
	0x38A4, 0x00,
	0x38A5, 0x00,
	0x38A6, 0x00,
	0x38A7, 0x00,
	0x38B8, 0x00,
	0x38B9, 0x00,
	0x38BA, 0x00,
	0x38BB, 0x00,
	0x38D0, 0x00,
	0x38D1, 0x00,
	0x38D2, 0x00,
	0x38D3, 0x00,
	0x38D6, 0x00,
	0x38D7, 0x00,
	0x38D8, 0x00,
	0x38D9, 0x00,
	0x38DA, 0x00,
	0x38DB, 0x00,
	0x38DC, 0x00,
	0x38DD, 0x00,
	0x38E8, 0x00,
	0x38E9, 0x00,
	0x0202, 0x1D,
	0x0203, 0x0C,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3162, 0x01,
	0x3163, 0xF4,
	0x3168, 0x01,
	0x3169, 0xF4,
	0x0204, 0x13,
	0x0205, 0x34,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0216, 0x13,
	0x0217, 0x34,
	0x0218, 0x01,
	0x0219, 0x00,
	0x3164, 0x13,
	0x3165, 0x34,
	0x3166, 0x01,
	0x3167, 0x00,
	0x316A, 0x13,
	0x316B, 0x34,
	0x316C, 0x01,
	0x316D, 0x00,
	0x3104, 0x01,
	0x3086, 0x01,
	0x3088, 0x00,
	0x30A8, 0x01,
	0x30AA, 0x01,
	0x30C0, 0x02,
	0x30C2, 0x02,
	0x30D8, 0x03,
	0x30DA, 0x03,
	0x3087, 0x2B,
	0x3089, 0x30,
	0x30A9, 0x30,
	0x30AB, 0x30,
	0x30C1, 0x30,
	0x30C3, 0x30,
	0x30D9, 0x30,
	0x30DB, 0x30,
	0x3170, 0x00,
	0x3171, 0x00,
	0x317E, 0x0A,
	0x317F, 0x0A,
	0x3180, 0x0A,
	0x3181, 0x0A,
	0x3182, 0x0A,
	0x3183, 0x0A,
	0x39D0, 0x00,
	0x084E, 0x00,
	0x084F, 0x17,
	0x0850, 0x00,
	0x0851, 0x13,
	0x0852, 0x00,
	0x0853, 0x27,
	0x0854, 0x00,
	0x0855, 0x29,
	0x0858, 0x00,
	0x0859, 0x1D,
};

static kal_uint16 yuechuimx800_custom9_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x02,
	0x321C, 0x00,
	0x0342, 0x26,
	0x0343, 0x30,
	0x0340, 0x0E,
	0x0341, 0x88,
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x03,
	0x0347, 0x00,
	0x0348, 0x22,
	0x0349, 0x3F,
	0x034A, 0x14,
	0x034B, 0xFF,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3005, 0x02,
	0x31A8, 0x04,
	0x31A9, 0x01,
	0x31D0, 0x41,
	0x31D1, 0x41,
	0x320B, 0x01,
	0x350D, 0x00,
	0x0408, 0x00,
	0x0409, 0x90,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x10,
	0x040D, 0x00,
	0x040E, 0x09,
	0x040F, 0x00,
	0x034C, 0x10,
	0x034D, 0x00,
	0x034E, 0x09,
	0x034F, 0x00,
	0x0301, 0x08,
	0x0303, 0x02,
	0x0305, 0x02,
	0x0306, 0x00,
	0x0307, 0xB6,
	0x030B, 0x02,
	0x030D, 0x0C,
	0x030E, 0x09,
	0x030F, 0xC4,
	0x3205, 0x00,
	0x3206, 0x00,
	0x3213, 0x01,
	0x3818, 0x3C,
	0x3819, 0x03,
	0x381A, 0xA9,
	0x381B, 0x01,
	0x381C, 0x02,
	0x381D, 0x04,
	0x381E, 0x01,
	0x381F, 0x01,
	0x3890, 0x00,
	0x3891, 0x00,
	0x3894, 0x00,
	0x3895, 0x00,
	0x3896, 0x00,
	0x3897, 0x00,
	0x389A, 0x00,
	0x389B, 0x00,
	0x389C, 0x00,
	0x389D, 0x00,
	0x389E, 0x00,
	0x389F, 0x00,
	0x38A0, 0x00,
	0x38A1, 0x00,
	0x38A2, 0x00,
	0x38A3, 0x00,
	0x38A4, 0x00,
	0x38A5, 0x00,
	0x38A6, 0x00,
	0x38A7, 0x00,
	0x38B8, 0x00,
	0x38B9, 0x64,
	0x38BA, 0x00,
	0x38BB, 0x64,
	0x38D0, 0x00,
	0x38D1, 0x00,
	0x38D2, 0x00,
	0x38D3, 0x00,
	0x38D6, 0x00,
	0x38D7, 0x00,
	0x38D8, 0x00,
	0x38D9, 0x00,
	0x38DA, 0x00,
	0x38DB, 0x00,
	0x38DC, 0x00,
	0x38DD, 0x00,
	0x38E8, 0x00,
	0x38E9, 0x00,
	0x0202, 0x0C,
	0x0203, 0x80,
	0x0224, 0x01,
	0x0225, 0x90,
	0x3162, 0x01,
	0x3163, 0xF4,
	0x3168, 0x01,
	0x3169, 0xF4,
	0x0204, 0x13,
	0x0205, 0x34,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0216, 0x13,
	0x0217, 0x34,
	0x0218, 0x01,
	0x0219, 0x00,
	0x3164, 0x13,
	0x3165, 0x34,
	0x3166, 0x01,
	0x3167, 0x00,
	0x316A, 0x13,
	0x316B, 0x34,
	0x316C, 0x01,
	0x316D, 0x00,
	0x3104, 0x03,
	0x3086, 0x02,
	0x3088, 0x00,
	0x30A8, 0x03,
	0x30AA, 0x01,
	0x30C0, 0x02,
	0x30C2, 0x02,
	0x30D8, 0x03,
	0x30DA, 0x03,
	0x3087, 0x2B,
	0x3089, 0x30,
	0x30A9, 0x2B,
	0x30AB, 0x30,
	0x30C1, 0x30,
	0x30C3, 0x30,
	0x30D9, 0x30,
	0x30DB, 0x30,
	0x3170, 0x01,
	0x3171, 0x00,
	0x317E, 0x0A,
	0x317F, 0x0A,
	0x3180, 0x0A,
	0x3181, 0x0A,
	0x3182, 0x0A,
	0x3183, 0x0A,
	0x39D0, 0x00,
	0x084E, 0x00,
	0x084F, 0x17,
	0x0850, 0x00,
	0x0851, 0x13,
	0x0852, 0x00,
	0x0853, 0x27,
	0x0854, 0x00,
	0x0855, 0x29,
	0x0858, 0x00,
	0x0859, 0x1D,
};

static kal_uint16 yuechuimx800_custom10_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x02,
	0x321C, 0x00,
	0x0342, 0x2D,
	0x0343, 0x10,
	0x0340, 0x12,
	0x0341, 0x00,
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x03,
	0x0347, 0x90,
	0x0348, 0x22,
	0x0349, 0x3F,
	0x034A, 0x14,
	0x034B, 0x6F,
	0x0900, 0x00,
	0x0901, 0x11,
	0x0902, 0x0A,
	0x3005, 0x00,
	0x31A8, 0x00,
	0x31A9, 0x01,
	0x31D0, 0x00,
	0x31D1, 0x00,
	0x320B, 0x01,
	0x350D, 0x00,
	0x0408, 0x02,
	0x0409, 0x20,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x1E,
	0x040D, 0x00,
	0x040E, 0x10,
	0x040F, 0xE0,
	0x034C, 0x1E,
	0x034D, 0x00,
	0x034E, 0x10,
	0x034F, 0xE0,
	0x0301, 0x08,
	0x0303, 0x02,
	0x0305, 0x02,
	0x0306, 0x00,
	0x0307, 0x85,
	0x030B, 0x02,
	0x030D, 0x0C,
	0x030E, 0x09,
	0x030F, 0xC4,
	0x3205, 0x01,
	0x3206, 0x01,
	0x3213, 0x01,
	0x3818, 0x68,
	0x3819, 0x03,
	0x381A, 0xA9,
	0x381B, 0x00,
	0x381C, 0x04,
	0x381D, 0x00,
	0x381E, 0x00,
	0x381F, 0x00,
	0x3890, 0x00,
	0x3891, 0x00,
	0x3894, 0x00,
	0x3895, 0x00,
	0x3896, 0x00,
	0x3897, 0x00,
	0x389A, 0x00,
	0x389B, 0x00,
	0x389C, 0x00,
	0x389D, 0x00,
	0x389E, 0x00,
	0x389F, 0x00,
	0x38A0, 0x00,
	0x38A1, 0x00,
	0x38A2, 0x00,
	0x38A3, 0x00,
	0x38A4, 0x00,
	0x38A5, 0x00,
	0x38A6, 0x00,
	0x38A7, 0x00,
	0x38B8, 0x01,
	0x38B9, 0x5E,
	0x38BA, 0x01,
	0x38BB, 0x5E,
	0x38D0, 0x00,
	0x38D1, 0x00,
	0x38D2, 0x00,
	0x38D3, 0x00,
	0x38D6, 0x00,
	0x38D7, 0x00,
	0x38D8, 0x00,
	0x38D9, 0x00,
	0x38DA, 0x00,
	0x38DB, 0x00,
	0x38DC, 0x00,
	0x38DD, 0x00,
	0x38E8, 0x00,
	0x38E9, 0x00,
	0x0202, 0x11,
	0x0203, 0xD0,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3162, 0x01,
	0x3163, 0xF4,
	0x3168, 0x01,
	0x3169, 0xF4,
	0x0204, 0x00,
	0x0205, 0x00,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0216, 0x00,
	0x0217, 0x00,
	0x0218, 0x01,
	0x0219, 0x00,
	0x3164, 0x00,
	0x3165, 0x00,
	0x3166, 0x01,
	0x3167, 0x00,
	0x316A, 0x00,
	0x316B, 0x00,
	0x316C, 0x01,
	0x316D, 0x00,
	0x3104, 0x01,
	0x3086, 0x01,
	0x3088, 0x01,
	0x30A8, 0x01,
	0x30AA, 0x01,
	0x30C0, 0x02,
	0x30C2, 0x02,
	0x30D8, 0x03,
	0x30DA, 0x03,
	0x3087, 0x2B,
	0x3089, 0x2B,
	0x30A9, 0x30,
	0x30AB, 0x30,
	0x30C1, 0x30,
	0x30C3, 0x30,
	0x30D9, 0x30,
	0x30DB, 0x30,
	0x3170, 0x00,
	0x3171, 0x00,
	0x317E, 0x0A,
	0x317F, 0x0A,
	0x3180, 0x0A,
	0x3181, 0x0A,
	0x3182, 0x0A,
	0x3183, 0x0A,
	0x39D0, 0x00,
	0x084E, 0x00,
	0x084F, 0x17,
	0x0850, 0x00,
	0x0851, 0x13,
	0x0852, 0x00,
	0x0853, 0x27,
	0x0854, 0x00,
	0x0855, 0x29,
	0x0858, 0x00,
	0x0859, 0x1D,
};

static kal_uint16 yuechuimx800_Image_quality_setting[] = {
	0x979F, 0x00,
	0x97AB, 0x01,
	0x97C1, 0x04,
	0x97C2, 0x02,
	0x98CC, 0x0A,
	0x98EE, 0x3C,
	0x98F1, 0x3C,
	0xCB89, 0x2D,
	0xCB8F, 0x2D,
	0xCBAB, 0x23,
	0xCBAD, 0x23,
	0xCBB1, 0x23,
	0xCBB3, 0x23,
	0xCC71, 0x2D,
	0xCC77, 0x2D,
	0xCC93, 0x23,
	0xCC95, 0x23,
	0xCC99, 0x23,
	0xCC9B, 0x23,
	0xCD71, 0x51,
	0xCD77, 0x51,
	0xCD7D, 0x51,
	0xCD83, 0x51,
	0xD4D5, 0x19,
	0xD4D6, 0x19,
	0xD4D7, 0x19,
	0xD4D8, 0x19,
	0xD4D9, 0x19,
	0xD4EE, 0x1A,
	0xD4EF, 0x1A,
	0xD4F0, 0x1A,
	0xD4F1, 0x1A,
	0xD4F2, 0x1A,
	0xD566, 0x1A,
	0xD567, 0x1A,
	0xD568, 0x1A,
	0xD569, 0x1A,
	0xD56A, 0x1A,
	0xD589, 0x19,
	0xD58A, 0x19,
	0xD58B, 0x19,
	0xD58C, 0x19,
	0xD58D, 0x19,
	0xD855, 0xFF,
	0xD857, 0xFF,
	0xD859, 0xFF,
	0xE15E, 0x0A,
	0xE15F, 0x05,
	0xE161, 0x0A,
	0xE162, 0x05,
	0xE164, 0x0A,
	0xE165, 0x05,
	0xE16D, 0x05,
	0xE16E, 0x05,
	0xE170, 0x05,
	0xE171, 0x05,
	0xE173, 0x05,
	0xE174, 0x05,
	0xE17C, 0x0A,
	0xE17D, 0x05,
	0xE17F, 0x0A,
	0xE180, 0x05,
	0xE182, 0x0A,
	0xE183, 0x05,
	0xE19A, 0x74,
	0xE19B, 0x74,
	0xE19D, 0x74,
	0xE19E, 0x74,
	0xE1A0, 0x74,
	0xE1A1, 0x74,
	0xE1A9, 0x0A,
	0xE1AA, 0x05,
	0xE1AC, 0x0A,
	0xE1AD, 0x05,
	0xE1AF, 0x0A,
	0xE1B0, 0x05,
	0xE1B8, 0x05,
	0xE1B9, 0x05,
	0xE1BB, 0x05,
	0xE1BC, 0x05,
	0xE1BE, 0x05,
	0xE1BF, 0x05,
	0xE1C7, 0x0A,
	0xE1C8, 0x05,
	0xE1CA, 0x0A,
	0xE1CB, 0x05,
	0xE1CD, 0x0A,
	0xE1CE, 0x05,
	0xE1E5, 0x74,
	0xE1E6, 0x74,
	0xE1E8, 0x74,
	0xE1E9, 0x74,
	0xE1EB, 0x74,
	0xE1EC, 0x74,
	0xE57C, 0x0A,
	0xE57D, 0x05,
	0xE57F, 0x0A,
	0xE580, 0x05,
	0xE582, 0x0A,
	0xE583, 0x05,
	0xE58B, 0x05,
	0xE58C, 0x05,
	0xE58E, 0x05,
	0xE58F, 0x05,
	0xE591, 0x05,
	0xE592, 0x05,
	0xE59A, 0x0A,
	0xE59B, 0x05,
	0xE59D, 0x0A,
	0xE59E, 0x05,
	0xE5A0, 0x0A,
	0xE5A1, 0x05,
	0xE5B8, 0x0A,
	0xE5B9, 0x05,
	0xE5BB, 0x0A,
	0xE5BC, 0x05,
	0xE5BE, 0x0A,
	0xE5BF, 0x05,
	0xE5C7, 0x05,
	0xE5C8, 0x05,
	0xE5CA, 0x05,
	0xE5CB, 0x05,
	0xE5CD, 0x05,
	0xE5CE, 0x05,
	0xE5D6, 0x0A,
	0xE5D7, 0x05,
	0xE5D9, 0x0A,
	0xE5DA, 0x05,
	0xE5DC, 0x0A,
	0xE5DD, 0x05,
	0xE622, 0x74,
	0xE623, 0x74,
	0xE625, 0x74,
	0xE626, 0x74,
	0xE628, 0x74,
	0xE629, 0x74,
	0xE631, 0x74,
	0xE632, 0x74,
	0xE634, 0x74,
	0xE635, 0x74,
	0xE637, 0x74,
	0xE638, 0x74,
	0xF01E, 0x02,
	0xF01F, 0xBC,
	0xF020, 0x02,
	0xF021, 0xBC,
	0xF022, 0x02,
	0xF023, 0xBC,
	0xF112, 0x00,
	0xF501, 0x01,
};

enum IMGSENSOR_MODE {
	IMGSENSOR_MODE_PREVIEW,
	IMGSENSOR_MODE_CAPTURE,
	IMGSENSOR_MODE_VIDEO,
	IMGSENSOR_MODE_HIGH_SPEED_VIDEO,
	IMGSENSOR_MODE_SLIM_VIDEO,
	IMGSENSOR_MODE_CUSTOM1,
	IMGSENSOR_MODE_CUSTOM2,
	IMGSENSOR_MODE_CUSTOM3,
	IMGSENSOR_MODE_CUSTOM4,
	IMGSENSOR_MODE_CUSTOM5,
	IMGSENSOR_MODE_CUSTOM6,
	IMGSENSOR_MODE_CUSTOM7,
	IMGSENSOR_MODE_CUSTOM8,
	IMGSENSOR_MODE_CUSTOM9,
	IMGSENSOR_MODE_CUSTOM10,
	IMGSENSOR_MODE_CUSTOM11,
	IMGSENSOR_MODE_CUSTOM12,
	IMGSENSOR_MODE_CUSTOM13,
	IMGSENSOR_MODE_CUSTOM14,
	IMGSENSOR_MODE_CUSTOM15,
	IMGSENSOR_MODE_INIT = 0xff,
};

enum {
	OTP_QSC_NONE = 0x0,
	OTP_QSC_INTERNAL,
	OTP_QSC_CUSTOM,
};

struct imgsensor_mode_struct {
	kal_uint32 pclk; /* record different mode's pclk */
	kal_uint32 linelength; /* record different mode's linelength */
	kal_uint32 framelength; /* record different mode's framelength */

	kal_uint8 startx; /* record different mode's startx of grabwindow */
	kal_uint8 starty; /* record different mode's startx of grabwindow */

	kal_uint16 grabwindow_width;
	kal_uint16 grabwindow_height;

/* for MIPIDataLowPwr2HighSpeedSettleDelayCount by different scenario*/
	kal_uint8 mipi_data_lp2hs_settle_dc;

 /*     following for GetDefaultFramerateByScenario()    */
	kal_uint16 max_framerate;
	kal_uint32 mipi_pixel_rate;
	kal_uint32 readout_length;
	kal_uint8 read_margin; /* sensor read margin */
};

/* SENSOR PRIVATE STRUCT FOR VARIABLES*/
struct imgsensor_struct {
	kal_uint8 mirror; /* mirrorflip information */

	kal_uint8 sensor_mode; /* record IMGSENSOR_MODE enum value */

	kal_uint32 shutter; /* current shutter */
	kal_uint16 gain; /* current gain */

	kal_uint32 pclk; /* current pclk */

	kal_uint32 frame_length; /* current framelength */
	kal_uint32 line_length; /* current linelength */

	kal_uint32 min_frame_length;
	kal_uint16 dummy_pixel; /* current dummypixel */
	kal_uint16 dummy_line; /* current dummline */

	kal_uint16 current_fps; /* current max fps */
	kal_bool autoflicker_en; /* record autoflicker enable or disable */
	kal_bool test_pattern; /* record test pattern mode or not */
	enum MSDK_SCENARIO_ID_ENUM current_scenario_id;
	kal_bool ihdr_en; /* ihdr enable or disable */
	kal_uint8 ihdr_mode; /* ihdr enable or disable */
	kal_uint8 pdaf_mode; /* ihdr enable or disable */
	kal_uint8 i2c_write_id; /* record current sensor's i2c write id */
};

/* SENSOR PRIVATE STRUCT FOR CONSTANT*/
struct imgsensor_info_struct {
	kal_uint32 sensor_id; /* record sensor id defined in Kd_imgsensor.h */
	kal_uint32 checksum_value; /* checksum value for Camera Auto Test */
	struct imgsensor_mode_struct pre;
	struct imgsensor_mode_struct cap;
	struct imgsensor_mode_struct normal_video;
	struct imgsensor_mode_struct hs_video;
	struct imgsensor_mode_struct slim_video;
	struct imgsensor_mode_struct custom1;
	struct imgsensor_mode_struct custom2;
	struct imgsensor_mode_struct custom3;
	struct imgsensor_mode_struct custom4;
	struct imgsensor_mode_struct custom5;
	struct imgsensor_mode_struct custom6;
	struct imgsensor_mode_struct custom7;
	struct imgsensor_mode_struct custom8;
	struct imgsensor_mode_struct custom9;
	struct imgsensor_mode_struct custom10;
	struct imgsensor_mode_struct custom11;
	struct imgsensor_mode_struct custom12;
	struct imgsensor_mode_struct custom13;
	struct imgsensor_mode_struct custom14;
	struct imgsensor_mode_struct custom15;

	kal_uint8 ae_shut_delay_frame; /* shutter delay frame for AE cycle */
	kal_uint8 ae_sensor_gain_delay_frame;
	kal_uint8 ae_ispGain_delay_frame;
	kal_uint8 ihdr_support; /* 1, support; 0,not support */
	kal_uint8 ihdr_le_firstline; /* 1,le first ; 0, se first */
	kal_uint8 temperature_support;	/* 1, support; 0,not support */
	kal_uint8 sensor_mode_num; /* support sensor mode num */

	kal_uint8 cap_delay_frame; /* enter capture delay frame num */
	kal_uint8 pre_delay_frame; /* enter preview delay frame num */
	kal_uint8 video_delay_frame; /* enter video delay frame num */
	kal_uint8 hs_video_delay_frame;
	kal_uint8 slim_video_delay_frame; /* enter slim video delay frame num */
	kal_uint8 custom1_delay_frame; /* enter custom1 delay frame num */
	kal_uint8 custom2_delay_frame; /* enter custom2 delay frame num */
	kal_uint8 custom3_delay_frame; /* enter custom3 delay frame num */
	kal_uint8 custom4_delay_frame; /* enter custom4 delay frame num */
	kal_uint8 custom5_delay_frame; /* enter custom5 delay frame num */
	kal_uint8 custom6_delay_frame; /* enter custom6 delay frame num */
	kal_uint8 custom7_delay_frame; /* enter custom7 delay frame num */
	kal_uint8 custom8_delay_frame; /* enter custom8 delay frame num */
	kal_uint8 custom9_delay_frame; /* enter custom9 delay frame num */
	kal_uint8 custom10_delay_frame; /* enter custom10 delay frame num */
	kal_uint8 custom11_delay_frame; /* enter custom11 delay frame num */
	kal_uint8 custom12_delay_frame; /* enter custom12 delay frame num */
	kal_uint8 custom13_delay_frame; /* enter custom13 delay frame num */
	kal_uint8 custom14_delay_frame; /* enter custom14 delay frame num */
	kal_uint8 custom15_delay_frame; /* enter custom15 delay frame num */

	kal_uint8  frame_time_delay_frame;
	kal_uint8 margin; /* sensor framelength & shutter margin */
	kal_uint32 min_shutter; /* min shutter */
	kal_uint32 max_frame_length;
	kal_uint32 min_gain;
	kal_uint32 max_gain;
	kal_uint32 min_gain_iso;
	kal_uint32 gain_step;
	kal_uint32 exp_step;
	kal_uint32 gain_type;
	kal_uint8 isp_driving_current; /* mclk driving current */
	kal_uint8 sensor_interface_type; /* sensor_interface_type */
	kal_uint8 mipi_sensor_type;
	/* 0,MIPI_OPHY_NCSI2; 1,MIPI_OPHY_CSI2, default is NCSI2,
	 * don't modify this para
	 */
	kal_uint8 mipi_settle_delay_mode;
	/* 0, high speed signal auto detect;
	 * 1, use settle delay,unit is ns,
	 * default is auto detect, don't modify this para
	 */
	kal_uint8 sensor_output_dataformat;
	kal_uint8 mclk;	 /* mclk value, suggest 24 or 26 for 24Mhz or 26Mhz */
	kal_uint32 i2c_speed; /* i2c speed */
	kal_uint8 mipi_lane_num; /* mipi lane num */
	kal_uint8 i2c_addr_table[5];
};

struct SEAMLESS_SYS_DELAY {
	uint32_t source_scenario;
	uint32_t target_scenario;
	uint32_t sys_delay;
};

/* SENSOR READ/WRITE ID */
/* #define IMGSENSOR_WRITE_ID_1 (0x6c) */
/* #define IMGSENSOR_READ_ID_1  (0x6d) */
/* #define IMGSENSOR_WRITE_ID_2 (0x20) */
/* #define IMGSENSOR_READ_ID_2  (0x21) */

extern int iReadRegI2C(u8 *a_pSendData, u16 a_sizeSendData,
	u8 *a_pRecvData, u16 a_sizeRecvData,
		       u16 i2cId);
extern int iWriteRegI2C(u8 *a_pSendData, u16 a_sizeSendData, u16 i2cId);

extern void read_imx230_eeprom(void);
int iBurstWriteReg_multi(u8 *pData, u32 bytes, u16 i2cId,
	u16 transfer_length, u16 timing);

extern int iReadReg(u16 a_u2Addr, u8 *a_puBuff, u16 i2cId);
extern int iWriteReg(u16 a_u2Addr, u32 a_u4Data, u32 a_u4Bytes, u16 i2cId);
extern void kdSetI2CSpeed(u16 i2cSpeed);
extern int iBurstWriteReg_multi(u8 *pData, u32 bytes, u16 i2cId,
				u16 transfer_length, u16 timing);
#endif
